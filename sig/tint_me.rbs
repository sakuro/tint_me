module TIntMe
  VERSION: String

  # Creates a new Style instance with the given options
  def self.[]: (
    ?foreground: Style::color_value?,
    ?background: Style::color_value?,
    ?bold: Style::boolean_value?,
    ?faint: Style::boolean_value?,
    ?italic: Style::boolean_value?,
    ?underline: Style::underline_value?,
    ?overline: Style::boolean_value?,
    ?blink: Style::boolean_value?,
    ?inverse: Style::boolean_value?,
    ?conceal: Style::boolean_value?
  ) -> Style

  class Style
    type color_value = :red | :green | :blue | :cyan | :yellow | :magenta | :gray | :white | :black | :default | :reset | String
    type underline_value = bool | :double | :reset
    type boolean_value = bool | :reset
    type style_attribute = :red | :green | :blue | :cyan | :yellow | :magenta | :gray | :white | :black |
                          :underline | :double_underline | :overline | :bold | :faint | :blink | :italic | :inverse | :conceal |
                          String | nil

    attr_reader foreground: color_value?
    attr_reader background: color_value?
    attr_reader bold: boolean_value?
    attr_reader faint: boolean_value?
    attr_reader italic: boolean_value?
    attr_reader underline: underline_value?
    attr_reader overline: boolean_value?
    attr_reader blink: boolean_value?
    attr_reader inverse: boolean_value?
    attr_reader conceal: boolean_value?

    def initialize: (
      ?foreground: color_value?,
      ?background: color_value?,
      ?bold: boolean_value?,
      ?faint: boolean_value?,
      ?italic: boolean_value?,
      ?underline: underline_value?,
      ?overline: boolean_value?,
      ?blink: boolean_value?,
      ?inverse: boolean_value?,
      ?conceal: boolean_value?
    ) -> void

    def call: (String text) -> String

    alias [] call

    def >>: (Style other) -> Style

    private

    def compose_attribute: ((color_value | underline_value | boolean_value)?, (color_value | underline_value | boolean_value)?) -> (color_value | underline_value | boolean_value)?

  end
end
